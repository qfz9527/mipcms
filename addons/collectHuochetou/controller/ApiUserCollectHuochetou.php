<?php//MIPJZ.Com [Don't forget the beginner's mind]//Copyright (c) 2017~2099 http://MIPJZ.Com All rights reserved.
namespace addons\collectHuochetou\controller;use think\Request;use think\Loader;use think\Db;use app\common\lib\File;use app\common\lib\ChinesePinyin;use app\common\controller\Init;class ApiUserCollectHuochetou extends Init {    public function articleAdd(Request $request) {        if (Request::instance() -> isPost()) {            $password = input('post.password');            if ($password != db('key')->where('key','collect_huochetou')->find()['val']) {                return jsonError('密码错误');                exit();            }            $title = input('post.title');	        $imgUrl = input('post.imgUrl');	        $videoImg = input('post.videoImg');	        $videoUrl = input('post.videoUrl');            $url_name = input('post.url_name');            $content = input('post.content');            $cid = input('post.cid');            $uid = input('post.uid');            $tags = input('post.tags');            $keywords = input('post.keywords');            $description = input('post.description');
            $publish_time = input('post.publish_time') ? input('post.publish_time') : time();;            $itemType = 'article';            $is_recommend = input('post.is_recommend');            if (!$is_recommend) {                $is_recommend = 0;            }            if ($tags) {                $tags = explode(',',$tags);            }            if (!$title) {              return jsonError('请输入标题');            }            if (!$content) {              return jsonError('请输入内容');            }
            if (!$cid) {                $cid = 0;            }
            if (!$uid) {                $uid = 1;            }
            $articleInfo = db('Articles')->where('title',$title)->find();
            if ($articleInfo) {                return jsonError('文章已存在');			} else {                //插件-站群专用				$siteId = 0;				$addonsInfo = db('Addons')->where('name','superSite')->find();				if ($addonsInfo) {					$siteList = db('domainSites')->select();					$tempSites = [];					if ($siteList) {						foreach ($siteList as $key => $value) {							$tempSites[] = $value['id'];						}						if ($tempSites) {							$siteId = $tempSites[array_rand($tempSites,1)];						}					}				}
                $uuid = uuid();                //系统内置-构建插入的文章的数据
                $resArray = array(                    'title'=>htmlspecialchars($title),                    'uid' => '',                    'cid' => $cid,                    'site_id' => $siteId,                    'create_time' => time(),                    'publish_time' => $publish_time,                    'uuid' => $uuid,                    'is_recommend' => $is_recommend,                    'content_id' => $uuid,                    'url_name' => $url_name,                    'keywords' => $keywords,                    'description' => $description,                    'img_url' => $imgUrl,                );
                if (is_array($fieldList)) {                    for ($i=0; $i < count($fieldList); $i++) {                         $resArray[$fieldList[$i]['Field']] = $fieldList[$i]['value'];                    }                }                //系统内置-文章插入                db('Articles')->insert($resArray);                $itemInfo = db('Articles')->where('uuid',$uuid)->find();                if ($itemInfo) {                    //插件-智能写作                    $aiwriteInfo = db('Addons')->where('name','aiwrite')->find();                    if ($aiwriteInfo) {                        $content = model('addons\aiwrite\model\Aiwrites')->index($content);                    }                    //插件-伪原创                    $wycInfo = db('Addons')->where('name','wyc')->find();                    if ($wycInfo) {                        $content = model('addons\wyc\model\Wyc')->index($content);                    }                    //插件-阿里云OSS图片上传                    $aliyunossInfo = db('Addons')->where('name','aliyunoss')->find();                    if ($aliyunossInfo) {                        preg_match_all('/<img.*?src=[\'|\"](.*?)[\'|\"].*?[\/]?>/', $content, $imagesArrays);                        if ($imagesArrays) {                            foreach($imagesArrays[1] as $k => $v) {                                $imgUrl = $imagesArrays[1][$k];                                $ext = strrchr($imgUrl,'.');                                if($ext != '.gif' || $ext!='.jpg' ||  $ext!='.png' || $ext!='.jpeg') {                                    $ext = '.jpg';                                }                                $filename = uuid() . $ext;                                $tempContent = file_get_contents($imgUrl);                                $res = model('addons\aliyunoss\model\AliyunossUploads')->defaultUpload($filename,$tempContent);                                if ($res['code'] == 1) {                                    $srcUrl = $res['data'];                                    $content = str_replace($imgUrl,$srcUrl,$content);                                }                            }                        }                    }                    //插件-七牛图片上传                    $qiniuossInfo = db('Addons')->where('name','qiniuoss')->find();                    if ($qiniuossInfo) {                        preg_match_all('/<img.*?src=[\'|\"](.*?)[\'|\"].*?[\/]?>/', $content, $imagesArrays);                        if ($imagesArrays) {                            foreach($imagesArrays[1] as $k => $v) {                                $imgUrl = $imagesArrays[1][$k];                                $ext = strrchr($imgUrl,'.');                                if($ext != '.gif' || $ext!='.jpg' ||  $ext!='.png' || $ext!='.jpeg') {                                    $ext = '.jpg';                                }                                $filename = uuid() . $ext;                                $tempContent = file_get_contents($imgUrl);                                $res = model('addons\qiniuoss\model\QiniuossUploads')->defaultUpload($filename,$tempContent);                                if ($res['code'] == 1) {                                    $srcUrl = $res['data'];                                    $content = str_replace($imgUrl,$srcUrl,$content);                                }                            }                        }                    }                    //插件-新浪图片上传                    $sinaInfo = db('Addons')->where('name','sinaimg')->find();                    if ($sinaInfo) {                        preg_match_all('/<img.*?src=[\'|\"](.*?)[\'|\"].*?[\/]?>/', $content, $imagesArrays);                        if ($imagesArrays) {                            foreach($imagesArrays[1] as $k => $v) {                                $imgUrl = $imagesArrays[1][$k];                                $ext = strrchr($imgUrl,'.');                                if($ext != '.gif' || $ext!='.jpg' ||  $ext!='.png' || $ext!='.jpeg') {                                    $ext = '.jpg';                                }                                $filename = uuid() . $ext;                                $tempContent = file_get_contents($imgUrl);                                $res = model('addons\sinaimg\model\sinaimgUploads')->defaultUpload($filename,$tempContent);                                if ($res['code'] == 1) {                                    $srcUrl = $res['data'];                                    $content = str_replace($imgUrl,$srcUrl,$content);                                }                            }                        }                    }                    //系统内置-插入内容                    db('ArticlesContent')->insert(array(                       'id' => $uuid,                       'content' => htmlspecialchars($content),                    ));                    //系统内置-插入标签                    if ($tags) {                        $itemId = $itemInfo['uuid'];                        $itemUid = $itemInfo['uid'];                        $publish_time = $itemInfo['publish_time'] ? $itemInfo['publish_time'] : time();                        if (!is_array($tags)) {                            return false;                        }
                        if (is_array($tags)) {                            db('ItemTags')->where('item_id',$itemId)->delete();                            foreach ($tags as $name) {                                if ($name) {                                    $tagInfo = db('Tags')->where('name',$name)->find();                                    if (!$tagInfo) {                                        $Pinyin = new ChinesePinyin();                                        $result = $Pinyin->TransformWithoutTone($name,'');                                        if ($result) {                                            if (!db('Tags')->where('url_name',$result)->find()) {                                                db('Tags')->insert(array(                                                    'id' => uuid(),                                                    'name' => $name,                                                    'url_name' => $result,                                                ));                                            } else {                                                db('Tags')->insert(array(                                                    'id' => uuid(),                                                    'name' => $name,                                                ));                                            }                                        } else {                                            db('Tags')->insert(array(                                                'id' => uuid(),                                                'name' => $name,                                            ));                                        }                                        $tagInfo = db('Tags')->where('name',$name)->find();                                    }                                    if ($tagInfo) {                                        db('ItemTags')->insert(array(                                            'id' => uuid(),                                            'tags_id'=>$tagInfo['id'],                                            'item_id' => $itemId,                                            'item_add_time' => $publish_time,                                        ));                                        $tagsCount = db('ItemTags')->where('tags_id',$tagInfo['id'])->count();                                        if ($tagsCount) {                                            db('Tags')->where('id',$tagInfo['id'])->update(array(                                                'relevance_num' => $tagsCount,                                                'creator_uid' => $itemUid,                                                'add_time' => time(),                                            ));                                        }                                    }                                }                            }                        }                    }                    //系统内置-自动推送
                    model('app\article\model\Articles')->itemPushUrl($itemInfo);                    //插件-视频插入开始					$articleVideoInfo = db('Addons')->where('name','articlevideo')->find();					if ($articleVideoInfo) {						db('Articles')->where('uuid',$itemInfo['uuid'])->update(array(							'video_img' => $videoImg,							'video_url' => $videoUrl,						));					}					//插件-视频插入结束                    //插件-文章静态化开始					try {                        $htmlInfo = db('Addons')->where('name','html')->find();                        if ($htmlInfo) {							$url = config('domainStatic').'/index.php?s=';							$html = getData($url);							$path = MIP_ROOT . 'index.html';							file_put_contents($path, $html);							$categoryList = model('app\\article\\model\\Articles')->getAllCategory();					    	    if ($categoryList) {						        foreach ($categoryList as $key => $value) {						        	   if ($itemInfo['cid'] == $value['id']) {                                        $tempUrl = str_replace(config('domain'), '', $value['url']);                                        $url = config('domainStatic').'/index.php?s=' . $tempUrl;                                        $html = getData($url);										if (strpos($tempUrl, '.html') !== false) {											$path = substr(MIP_ROOT,0,strlen(MIP_ROOT)-1) . $tempUrl;										} else {											$path = substr(MIP_ROOT,0,strlen(MIP_ROOT)-1) . $tempUrl;										}										$path = str_replace('/', DS, $path);										File::mk_dir($path);										file_put_contents($path . 'index.html', $html);						            	}						        }							}							//							$itemInfo = model('app\\article\\model\\Articles')->getItemInfo($itemInfo['id']);							$itemList = db('Articles')->where('id','<',$itemInfo['id'])->limit(1)->order('id','desc')->select();							$tempUrl = str_replace(config('domain'), '', $itemInfo['url']);							$url = config('domainStatic').'/index.php?s=' . $tempUrl;							$html = getData($url);							$path = substr(MIP_ROOT,0,strlen(MIP_ROOT)-1) . $tempUrl;							$filePath = str_replace('/', DS, $path);							$index = strripos($filePath,DS);							$path = substr($path,0,$index) . DS;							File::mk_dir($path);							file_put_contents($filePath, $html);						}					} catch (\Exception $e) {}                    //插件-文章静态化结束                    //以下为发布成功标识
                    return jsonSuccess('发布成功',$result);                } else {                     return jsonError('提交失败');                }            }        }
    }    public function articleAddTime(Request $request)    {
        if (Request::instance()->isPost()) {
            $password = input('post.password');

            if ($password != db('key')->where('key','collect_huochetou')->find()['val']) {
                return jsonError('密码错误');
                exit();
            }
            $title = input('post.title');
            $content = input('post.content');
            $cid = input('post.cid');
            $url_name = input('post.url_name');
            $tags = input('post.tags');
            $publish_time = input('post.publish_time') ? input('post.publish_time') : time();;
            $itemType = 'article';
            $is_recommend = input('post.is_recommend');
            
            if (!$is_recommend) {
                $is_recommend = 0;
            }
            if (!$title) {
              return jsonError('请输入标题');
            }
            if (!$content) {
              return jsonError('请输入内容');
            }
            if (!$cid) {
                $cid = 1;
            }
             
            $articleInfo = db('Articles')->where('title',$title)->find();
            $articleInfoApproval = db('ArticlesTimeMain')->where('title',$title)->find();
            if ($articleInfo || $articleInfoApproval) {
                return jsonError('文章已存在');
            }
            $main_id = uuid();
             db('ArticlesTime')->insert(array(
                'uuid' => $main_id,
                'cid' => $cid,
                'create_time' => time(),
                'publish_time' => $publish_time,
                'main_id' => $main_id,
            ));
            $createInfo = db('ArticlesTimeMain')->insert(array(
               'title'=>htmlspecialchars($title),
               'uid' => $this->userId,
               'main_id' => $main_id,
               'is_recommend' => $is_recommend,
               'content' => htmlspecialchars($content),
               'tags' => $tags,
               'url_name' => $url_name
            ));
            if ($createInfo) {
                return jsonSuccess('发布成功');
            } else {
                return  jsonError('提交失败');
            }        }    }
}
